// Node.js —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ - –¥–æ–ø–æ–ª–Ω—è–µ—Ç sectionsMap
// –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ñ–∞–π–ª componentsMap.js, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __dirname = path.dirname(fileURLToPath(import.meta.url));
const componentsDir = path.resolve(__dirname, '../src/data/components');
const outputFile = path.resolve(__dirname, '../src/data/core/componentsMap.js');

// –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ .js —Ñ–∞–π–ª—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
const files = fs.readdirSync(componentsDir).filter(f => f.endsWith('.js'));

const importStatements = [];
const mapEntries = [];

for (const file of files) {
  const name = path.basename(file, '.js');
  const varName = name.replace(/[-.]/g, '_'); // –µ—Å–ª–∏ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –¥–µ—Ñ–∏—Å—ã
  importStatements.push(`import ${varName} from '../components/${file}';`);
  mapEntries.push(`  "${name}": ${varName},`);
}

const output = `// üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —Å–∫—Ä–∏–ø—Ç–æ–º buildComponentsMap.js

${importStatements.join('\n')}

export const componentsMap = {
${mapEntries.join('\n')}
};
`;

fs.writeFileSync(outputFile, output, 'utf8');
console.log(`‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —Ñ–∞–π–ª: ${outputFile}`);
